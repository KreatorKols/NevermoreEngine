"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[373],{25354:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new LinearValue object.","params":[{"name":"constructor","desc":"","lua_type":"(number ...) -> T"},{"name":"values","desc":"","lua_type":"({ number })"}],"returns":[{"desc":"","lua_type":"LinearValue<T>"}],"function_type":"static","source":{"line":31,"path":"src/spring/src/Shared/LinearValue.lua"}},{"name":"isLinear","desc":"Returns whether or not a value is a LinearValue object.","params":[{"name":"value","desc":"A value to check","lua_type":"any"}],"returns":[{"desc":"True if a linear value, false otherwise","lua_type":"boolean"}],"function_type":"static","source":{"line":44,"path":"src/spring/src/Shared/LinearValue.lua"}},{"name":"toLinearIfNeeded","desc":"Converts an arbitrary value to a LinearValue if Roblox has not defined this value\\nfor multiplication and addition.","params":[{"name":"value","desc":"","lua_type":"T"}],"returns":[{"desc":"","lua_type":"LinearValue<T> | T"}],"function_type":"static","source":{"line":77,"path":"src/spring/src/Shared/LinearValue.lua"}},{"name":"fromLinearIfNeeded","desc":"Extracts the base value out of a packed linear value if needed.","params":[{"name":"value","desc":"","lua_type":"LinearValue<T> | any"}],"returns":[{"desc":"","lua_type":"T | any"}],"function_type":"static","source":{"line":100,"path":"src/spring/src/Shared/LinearValue.lua"}},{"name":"ToBaseValue","desc":"Converts the value back to the base value","params":[],"returns":[{"desc":"","lua_type":"T"}],"function_type":"method","source":{"line":113,"path":"src/spring/src/Shared/LinearValue.lua"}},{"name":"GetMagnitude","desc":"Returns the magnitude of the linear value.","params":[],"returns":[{"desc":"The magnitude of the linear value.","lua_type":"number"}],"function_type":"method","source":{"line":158,"path":"src/spring/src/Shared/LinearValue.lua"}}],"properties":[{"name":"magnitude","desc":"Returns the magnitude of the linear value.","lua_type":"number","readonly":true,"source":{"line":174,"path":"src/spring/src/Shared/LinearValue.lua"}}],"types":[],"name":"LinearValue","desc":"Represents a value that can operate in linear space","source":{"line":7,"path":"src/spring/src/Shared/LinearValue.lua"}}')}}]);