"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[18988],{97447:e=>{e.exports=JSON.parse('{"functions":[{"name":"promiseDataStore","desc":"Promises a Roblox datastore object with the name and scope. Generally only fails\\nwhen you haven\'t published the place.","params":[{"name":"name","desc":"","lua_type":"string"},{"name":"scope","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Promise<DataStore>"}],"function_type":"static","source":{"line":25,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}},{"name":"promiseOrderedDataStore","desc":"Promises a Roblox datastore object with the name and scope. Generally only fails\\nwhen you haven\'t published the place.","params":[{"name":"name","desc":"","lua_type":"string"},{"name":"scope","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Promise<OrderedDataStore>"}],"function_type":"static","source":{"line":48,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}},{"name":"getAsync","desc":"Wraps :GetAsync() in a promise","params":[{"name":"robloxDataStore","desc":"","lua_type":"DataStore"},{"name":"key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Promise<T>"}],"function_type":"static","source":{"line":70,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}},{"name":"updateAsync","desc":"Wraps :UpdateAsync() in a promise","params":[{"name":"robloxDataStore","desc":"","lua_type":"DataStore"},{"name":"key","desc":"","lua_type":"string"},{"name":"updateFunc","desc":"","lua_type":"(T) -> T?"}],"returns":[{"desc":"","lua_type":"Promise<T>"}],"function_type":"static","source":{"line":94,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}},{"name":"setAsync","desc":"Wraps :SetAsync() in a promise","params":[{"name":"robloxDataStore","desc":"","lua_type":"DataStore"},{"name":"key","desc":"","lua_type":"string"},{"name":"value","desc":"","lua_type":"string"},{"name":"userIds","desc":"Associated userIds","lua_type":"{ number }"}],"returns":[{"desc":"","lua_type":"Promise<boolean>"}],"function_type":"static","source":{"line":127,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}},{"name":"promiseIncrementAsync","desc":"Wraps :IncrementAsync() in a promise","params":[{"name":"robloxDataStore","desc":"","lua_type":"DataStore"},{"name":"key","desc":"","lua_type":"string"},{"name":"delta","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Promise<boolean>"}],"function_type":"static","source":{"line":155,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}},{"name":"removeAsync","desc":"Wraps :RemoveAsync() in a promise","params":[{"name":"robloxDataStore","desc":"","lua_type":"DataStore"},{"name":"key","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Promise<boolean>"}],"function_type":"static","source":{"line":181,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}},{"name":"promiseSortedPagesAsync","desc":"Returns a DataStorePages object. The sort order is determined by ascending,\\nthe length of each page by pageSize, and minValue/maxValue are\\noptional parameters which filter the results.","params":[{"name":"orderedDataStore","desc":"","lua_type":"OrderedDataStore"},{"name":"ascending","desc":"","lua_type":"boolean"},{"name":"pagesize","desc":"","lua_type":"int"},{"name":"minValue","desc":"","lua_type":"number?"},{"name":"maxValue","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"Promise<DataStorePages>"}],"function_type":"static","source":{"line":208,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}},{"name":"promiseOrderedEntries","desc":"Returns a DataStorePages object. The sort order is determined by ascending,\\nthe length of each page by pageSize, and minValue/maxValue are\\noptional parameters which filter the results.","params":[{"name":"orderedDataStore","desc":"","lua_type":"OrderedDataStore"},{"name":"ascending","desc":"","lua_type":"boolean"},{"name":"pagesize","desc":"","lua_type":"int"},{"name":"entries","desc":"Number of entries to pull","lua_type":"int"},{"name":"minValue","desc":"","lua_type":"number?"},{"name":"maxValue","desc":"","lua_type":"number?"}],"returns":[{"desc":"","lua_type":"Promise<OrderedDataStoreEntry>"}],"function_type":"static","source":{"line":275,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}}],"properties":[],"types":[{"name":"OrderedDataStoreEntry","desc":"","fields":[{"name":"key","lua_type":"any","desc":""},{"name":"value","lua_type":"any","desc":""}],"source":{"line":241,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}}],"name":"DataStorePromises","desc":"Utility methods to interactive with Roblox datastores.","realm":["Server"],"source":{"line":7,"path":"src/datastore/src/Server/Utility/DataStorePromises.lua"}}')}}]);