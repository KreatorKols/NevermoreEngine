"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[32402],{17572:e=>{e.exports=JSON.parse('{"functions":[{"name":"Init","desc":"Initializes the ScoredActionServiceClient. Should be done via [ServiceBag].","params":[{"name":"self","desc":"","lua_type":"ScoredActionServiceClient"},{"name":"serviceBag","desc":"","lua_type":"ServiceBag"}],"returns":[],"function_type":"static","source":{"line":39,"path":"src/scoredactionservice/src/Client/ScoredActionServiceClient.lua"}},{"name":"Start","desc":"Starts the scored action service. Should be done via [ServiceBag].","params":[{"name":"self","desc":"","lua_type":"ScoredActionServiceClient"}],"returns":[],"function_type":"static","source":{"line":54,"path":"src/scoredactionservice/src/Client/ScoredActionServiceClient.lua"}},{"name":"GetScoredAction","desc":"Gets a new scored action to use","params":[{"name":"self","desc":"","lua_type":"ScoredActionServiceClient"},{"name":"inputKeyMapList","desc":"","lua_type":"InputKeyMapList"}],"returns":[{"desc":"","lua_type":"ScoredAction"}],"function_type":"static","source":{"line":67,"path":"src/scoredactionservice/src/Client/ScoredActionServiceClient.lua"}},{"name":"ObserveNewFromInputKeyMapList","desc":"Observes a new scored action from a scoring value.\\n\\n:::warning\\nThis MUTATES state of the scored action service whenever an object is emitted.\\n:::","params":[{"name":"self","desc":"","lua_type":"ScoredActionServiceClient"},{"name":"scoreValue","desc":"","lua_type":"ValueObject<number>"}],"returns":[{"desc":"","lua_type":"(source: Observable<InputKeyMapList>) -> Observable<ScoredAction>"}],"function_type":"static","source":{"line":114,"path":"src/scoredactionservice/src/Client/ScoredActionServiceClient.lua"}}],"properties":[],"types":[],"name":"ScoredActionServiceClient","desc":"Scores actions and picks the highest rated one every frame.","realm":["Client"],"source":{"line":8,"path":"src/scoredactionservice/src/Client/ScoredActionServiceClient.lua"}}')}}]);