"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86112],{33905:e=>{e.exports=JSON.parse('{"functions":[{"name":"Init","desc":"Initializes the TimeSyncService","params":[{"name":"self","desc":"","lua_type":"TimeSyncService"}],"returns":[],"function_type":"static","source":{"line":44,"path":"src/timesyncservice/src/Shared/TimeSyncService.lua"}},{"name":"IsSynced","desc":"Returns true if the clock is synced. If the clock is synced, then it can\\nbe retrieved.","params":[{"name":"self","desc":"","lua_type":"TimeSyncService"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":70,"path":"src/timesyncservice/src/Shared/TimeSyncService.lua"}},{"name":"WaitForSyncedClock","desc":"Waits for the synced clock, or throws an error.","params":[{"name":"self","desc":"","lua_type":"TimeSyncService"}],"returns":[{"desc":"","lua_type":"MasterClock | SlaveClock"}],"function_type":"static","yields":true,"source":{"line":111,"path":"src/timesyncservice/src/Shared/TimeSyncService.lua"}},{"name":"GetSyncedClock","desc":"Returns a synced clock if there is one available. Otherwise, returns nil.","params":[{"name":"self","desc":"","lua_type":"TimeSyncService"}],"returns":[{"desc":"","lua_type":"MasterClock | SlaveClock | nil"}],"function_type":"static","source":{"line":125,"path":"src/timesyncservice/src/Shared/TimeSyncService.lua"}},{"name":"PromiseSyncedClock","desc":"Promises a synced clock","params":[{"name":"self","desc":"","lua_type":"TimeSyncService"}],"returns":[{"desc":"","lua_type":"Promise<MasterClock | SlaveClock>"}],"function_type":"static","source":{"line":143,"path":"src/timesyncservice/src/Shared/TimeSyncService.lua"}},{"name":"Destroy","desc":"Cleans up the time syncronization service.","params":[{"name":"self","desc":"","lua_type":"TimeSyncService"}],"returns":[],"function_type":"static","source":{"line":181,"path":"src/timesyncservice/src/Shared/TimeSyncService.lua"}}],"properties":[],"types":[],"name":"TimeSyncService","desc":"Syncronizes time between the server and client. This creates a shared timestamp that can be used to reasonably time\\nevents between the server and client.","source":{"line":8,"path":"src/timesyncservice/src/Shared/TimeSyncService.lua"}}')}}]);