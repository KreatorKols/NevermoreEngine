"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[40394],{78444:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new cooldown tracker model","params":[],"returns":[{"desc":"","lua_type":"CooldownTrackerModel"}],"function_type":"static","source":{"line":33,"path":"src/cooldown/src/Shared/Model/CooldownTrackerModel.lua"}},{"name":"ObserveActiveCooldownModelBrio","desc":"Observes the active cooldown model, but only fires when it is not nil","params":[{"name":"self","desc":"","lua_type":"CooldownTrackerModel"}],"returns":[{"desc":"","lua_type":"Observable<Brio<CooldownModel>>"}],"function_type":"static","source":{"line":79,"path":"src/cooldown/src/Shared/Model/CooldownTrackerModel.lua"}},{"name":"SetCooldownModel","desc":"Sets the cooldown model. Returns a function to unmount the model.","params":[{"name":"self","desc":"","lua_type":"CooldownTrackerModel"},{"name":"cooldownModel","desc":"","lua_type":"CooldownModel"}],"returns":[{"desc":"","lua_type":"function"}],"function_type":"static","source":{"line":93,"path":"src/cooldown/src/Shared/Model/CooldownTrackerModel.lua"}}],"properties":[],"types":[],"name":"CooldownTrackerModel","desc":"Helps track the active cooldown that is running.","source":{"line":7,"path":"src/cooldown/src/Shared/Model/CooldownTrackerModel.lua"}}')}}]);