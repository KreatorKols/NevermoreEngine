"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[19025],{55216:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new font palette.","params":[],"returns":[{"desc":"","lua_type":"FontPallete"}],"function_type":"static","source":{"line":24,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"GetFontNames","desc":"Gets all available font names","params":[],"returns":[{"desc":"","lua_type":"{ string }"}],"function_type":"method","source":{"line":43,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"ObserveFontNames","desc":"Observes all available font names as they are added starting with\\nexisting fonts.","params":[],"returns":[{"desc":"","lua_type":"Observable<string>"}],"function_type":"method","source":{"line":52,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"ObserveFontNamesBrio","desc":"Observes all available font names as they are added starting with\\nexisting fonts.","params":[],"returns":[{"desc":"","lua_type":"Observable<Brio<string>>"}],"function_type":"method","source":{"line":71,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"GetFont","desc":"Gets a font from name","params":[{"name":"fontName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Enum.Font"}],"function_type":"method","source":{"line":81,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"ObserveFont","desc":"Observes a font from name","params":[{"name":"fontName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Observe<Enum.Font>"}],"function_type":"method","source":{"line":93,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"ObserveFontFace","desc":"Observes the curent font face defined for the font name","params":[{"name":"fontName","desc":"","lua_type":"string"},{"name":"weight","desc":"","lua_type":"(FontWeight | Observable<FontWeight>)?"},{"name":"style","desc":"","lua_type":"(FontStyle | Observable<FontStyle>)?"}],"returns":[{"desc":"","lua_type":"Observable<Font>"}],"function_type":"method","source":{"line":107,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"GetFontFaceValue","desc":"Gets a font value object for a given font.","params":[{"name":"fontName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"ValueObject<Font>"}],"function_type":"method","source":{"line":135,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"GetFontValue","desc":"Gets a font value object for a given font.","params":[{"name":"fontName","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"ValueObject<Font>"}],"function_type":"method","source":{"line":152,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"GetDefaultFontMap","desc":"Gets the default font map","params":[],"returns":[{"desc":"","lua_type":"{ string: Font }"}],"function_type":"method","source":{"line":167,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}},{"name":"DefineFont","desc":"Defines a new font into the palette which can be changed over time.","params":[{"name":"fontName","desc":"","lua_type":"string"},{"name":"defaultFont","desc":"","lua_type":"Enum.Font | Font"}],"returns":[{"desc":"","lua_type":"ValueObject<Enum.Font | Font>"}],"function_type":"method","source":{"line":178,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}}],"properties":[],"types":[],"name":"FontPalette","desc":"Holds fonts for reuse by giving fonts a semantic name. This makes theming easier in general.","source":{"line":6,"path":"src/colorpalette/src/Shared/Font/FontPalette.lua"}}')}}]);